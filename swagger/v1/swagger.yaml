---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/admin/job_posts/{job_post_id}/job_applications":
    get:
      summary: Retrieves all job applications for a specific job post
      tags:
      - Admin::JobApplications
      security:
      - Bearer: {}
      parameters:
      - name: job_post_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: job applications found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    job_post_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  "/admin/job_posts/{job_post_id}/job_applications/{job_application_id}":
    get:
      summary: Retrieves a job application
      tags:
      - Admin::JobApplications
      security:
      - Bearer: {}
      parameters:
      - name: job_post_id
        in: path
        required: true
        schema:
          type: string
      - name: job_application_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: job application found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  job_post_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: job application not found
  "/users/{user_id}/job_applications":
    get:
      summary: Retrieves all job applications for the current user
      tags:
      - JobApplications
      security:
      - Bearer: {}
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: job applications found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    job_post_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
    post:
      summary: Creates a job application
      tags:
      - JobApplications
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: job application created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job_post_id:
                  type: integer
              required:
              - job_post_id
  "/users/{user_id}/job_applications/{job_application_id}":
    get:
      summary: Retrieves a job application
      tags:
      - JobApplications
      security:
      - Bearer: {}
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: job_application_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: job application found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  job_post_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: job application not found
  "/job_posts/{id}":
    get:
      summary: Retrieves a job post
      tags:
      - JobPosts
      security:
      - Bearer: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: job post found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
        '404':
          description: job post not found
    delete:
      summary: Deletes a job post
      tags:
      - JobPosts
      security:
      - Bearer: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: job post deleted
        '404':
          description: job post not found
  "/job_posts":
    get:
      summary: Retrieves all job posts
      tags:
      - JobPosts
      security:
      - Bearer: {}
      responses:
        '200':
          description: job posts found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
    post:
      summary: Creates a job post
      tags:
      - JobPosts
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: job post created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
              required:
              - title
              - description
  "/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/login":
    post:
      summary: User login
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user logged in
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: 127.0.0.1
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Your Bearer token
